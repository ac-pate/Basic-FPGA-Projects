
To assemble:

nasm -f elf file.asm -l file.lst

or:

nasm -f elf -g file.asm -l file.lst

-g :  is the debug option to retain symbol table information
      in the file.o object file



To load:


ld -melf_i386  -o file  file.o 


Notes:  file.asm = input assembly language source file
        file.lst = listing file generated by NASM 
        file.o   =  object file created by nasm
        file     = executable file created by ld 

gdb name_of_executable     (from Linux command line)

(gdb) set disassembly-flavor intel
(gdb) break keith
(gdb) run
(gdb) disassemble
 Dump of assembler code for function keith:
=> 0x08048064 <+0>:     mov    bx,0x2
   0x08048068 <+4>:     add    ax,bx
   0x0804806b <+7>:     mov    eax,0x1
   0x08048070 <+12>:    mov    ebx,0x0
   0x08048075 <+17>:    int    0x80
End of assembler dump.

(gdb) nexti (to single step)

(gdb) print/x $bx   (to display value of a register)

(gdb) info registers  (dump all reg values)


To examine 1 byte of memory in hex format:

(gdb) x/1xb &label


where label  is the associated label (or one can even specify the
  hex address of the memory location is known)

gdb) x/4xb 0x804909c
0x804909c:      0x02    0x00    0x03    0x00

